From a6db4fe5b728b3b0df5ae97e917f39aa27c8c9de Mon Sep 17 00:00:00 2001
From: gamax92 <gamax92@aol.com>
Date: Wed, 12 Jul 2017 10:07:45 -0600
Subject: [PATCH 4/5] Add stubs to satisfy Overwatch

Subject for commit replacement by actual functionality
---
 dlls/ntdll/loader.c     |  7 +++++++
 dlls/ntdll/ntdll.spec   |  1 +
 dlls/user32/user32.spec |  2 ++
 dlls/user32/win.c       | 14 ++++++++++++++
 4 files changed, 24 insertions(+)

diff --git a/dlls/ntdll/loader.c b/dlls/ntdll/loader.c
index 15ed31452e..eb9590cd74 100644
--- a/dlls/ntdll/loader.c
+++ b/dlls/ntdll/loader.c
@@ -1537,6 +1537,13 @@ done:
     return status;
 }
 
+NTSTATUS WINAPI LdrRegisterDllNotification(ULONG flags, void *notification_fn, PVOID context, PVOID *cookie)
+{
+    FIXME("(%08x, %p, %p, %p),  stub\n", flags, notification_fn, context, cookie);
+
+    return STATUS_SUCCESS;
+}
+
 /******************************************************************
  *		LdrDisableThreadCalloutsForDll (NTDLL.@)
  *
diff --git a/dlls/ntdll/ntdll.spec b/dlls/ntdll/ntdll.spec
index 3a4d0d8779..6e56c995ba 100644
--- a/dlls/ntdll/ntdll.spec
+++ b/dlls/ntdll/ntdll.spec
@@ -84,6 +84,7 @@
 @ stdcall LdrProcessRelocationBlock(ptr long ptr long)
 @ stdcall LdrQueryImageFileExecutionOptions(ptr wstr long ptr long ptr)
 @ stdcall LdrQueryProcessModuleInformation(ptr long ptr)
+@ stdcall LdrRegisterDllNotification(long ptr ptr ptr)
 @ stdcall LdrResolveDelayLoadedAPI(ptr ptr ptr ptr ptr long)
 @ stub LdrSetAppCompatDllRedirectionCallback
 @ stub LdrSetDllManifestProber
diff --git a/dlls/user32/user32.spec b/dlls/user32/user32.spec
index 4514877264..65e6296f1f 100644
--- a/dlls/user32/user32.spec
+++ b/dlls/user32/user32.spec
@@ -385,6 +385,7 @@
 @ stdcall GetWindow(long long)
 @ stdcall GetWindowContextHelpId(long)
 @ stdcall GetWindowDC(long)
+@ stdcall GetWindowDisplayAffinity(long ptr)
 @ stdcall GetWindowInfo(long ptr)
 @ stdcall GetWindowLongA(long long)
 @ stdcall -arch=win64 GetWindowLongPtrA(long long)
@@ -688,6 +689,7 @@
 @ stdcall SetUserObjectSecurity(long ptr ptr)
 @ stdcall SetWinEventHook(long long long ptr long long long)
 @ stdcall SetWindowContextHelpId(long long)
+@ stdcall SetWindowDisplayAffinity(long long)
 @ stub SetWindowFullScreenState
 @ stdcall SetWindowLongA(long long long)
 @ stdcall -arch=win64 SetWindowLongPtrA(long long long)
diff --git a/dlls/user32/win.c b/dlls/user32/win.c
index 62be9dbe21..12c7756494 100644
--- a/dlls/user32/win.c
+++ b/dlls/user32/win.c
@@ -3986,3 +3986,17 @@ BOOL WINAPI RegisterTouchWindow(HWND hwnd, ULONG flags)
     SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
     return FALSE;
 }
+
+BOOL WINAPI GetWindowDisplayAffinity(HWND hwnd, DWORD *affinity)
+{
+    FIXME("(%p, %p) stub\n", hwnd, affinity);
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
+
+BOOL WINAPI SetWindowDisplayAffinity(HWND hwnd, DWORD affinity)
+{
+    FIXME("(%p, %08x) stub\n", hwnd, affinity);
+    SetLastError(ERROR_CALL_NOT_IMPLEMENTED);
+    return FALSE;
+}
-- 
2.13.2

